// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`appendFittedText Should works with text, radius, class parameters as function with data in selection Should render correctly 1`] = `"<div><g><text class=\\"mocked_css_class_value fitted-text\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(0.4893501829289196)\\"><tspan x=\\"0\\" y=\\"3.6000000000000005\\">mocked_text_value</tspan></text></g><g><text class=\\"mocked_css_class_value2 fitted-text\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(0.48074017006186526)\\"><tspan x=\\"0\\" y=\\"3.6000000000000005\\">mocked_text_value2</tspan></text></g></div>"`;

exports[`appendFittedText Should works with text, radius, class parameters as function without data in selection Should render correctly 1`] = `"<div><g><text class=\\"mocked_css_class_value fitted-text\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(0.4893501829289196)\\"><tspan x=\\"0\\" y=\\"3.6000000000000005\\">mocked_text_value</tspan></text></g></div>"`;

exports[`appendFittedText Should works with text, radius, class parameters as value without data in selection Should render correctly 1`] = `"<div><g><text class=\\"mocked_css_class_value fitted-text\\" style=\\"text-anchor: middle; font: 10px sans-serif\\" transform=\\"translate(0,0) scale(0.4893501829289196)\\"><tspan x=\\"0\\" y=\\"3.6000000000000005\\">mocked_text_value</tspan></text></g></div>"`;

exports[`extractLines Should works with empty string as text 1`] = `Array []`;

exports[`extractLines Should works with integer as text 1`] = `
Array [
  Object {
    "text": "0",
    "width": 12,
  },
]
`;

exports[`extractLines Should works with multiple spaces and multiple words as text 1`] = `
Array [
  Object {
    "text": "mocked",
    "width": 72,
  },
  Object {
    "text": "text",
    "width": 48,
  },
  Object {
    "text": "value",
    "width": 60,
  },
]
`;

exports[`extractLines Should works with multiple words as text 1`] = `
Array [
  Object {
    "text": "mocked",
    "width": 72,
  },
  Object {
    "text": "text",
    "width": 48,
  },
  Object {
    "text": "value",
    "width": 60,
  },
]
`;

exports[`extractLines Should works with multiple words on same line 1`] = `
Array [
  Object {
    "text": "mocked",
    "width": 72,
  },
  Object {
    "text": "text",
    "width": 48,
  },
  Object {
    "text": "a value",
    "width": 84,
  },
]
`;

exports[`extractLines Should works with simple word as text 1`] = `
Array [
  Object {
    "text": "mockedTextValue",
    "width": 180,
  },
]
`;

exports[`extractLines Should works with undefined as text 1`] = `Array []`;

exports[`measureTextWidth Should measure empty text correctly 1`] = `0`;

exports[`measureTextWidth Should measure text correctly 1`] = `180`;

exports[`measureTextWidth Should measure undefined text correctly 1`] = `0`;
